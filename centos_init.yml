#!/usr/bin/env ansible-playbook
---
- hosts: all 
  gather_facts: yes
  vars:
    packages_to_install: [ git, python, mosh, python-pip, 
        vim, htop, iftop, lrzsz, jq, telnet, lsof,
        tcpdump, mlocate, rsyslog, toilet, nload, software-properties-common, screen
        ]
    username: cbergeron
    firstrun: "false"
    sysupgrade: "false"
  sudo: yes

  tasks:
    - name: TASK | Install EPEL repo
      yum:
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm
        state: present

    - name: TASK | Import EPEL GPG key
      rpm_key:
        key: /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
        state: present

    - name: TASK | Install remi repo
      yum:
        name: http://rpms.famillecollet.com/enterprise/remi-release-{{ ansible_distribution_major_version }}.rpm
        state: present

    - name: TASK | Import remi GPG key
      rpm_key:
        key: http://rpms.remirepo.net/RPM-GPG-KEY-remi
        state: present

    - name: TASK | Set /etc/hostname
      template: src=templates/hostname.j2 dest=/etc/hostname force=yes
      notify:
        - reboot
      when: firstrun | match("true")

    - name: TASK | Generate locale
      locale_gen: name=en_US.UTF-8 state=present
      when: firstrun | match("true")

    - name: TASK | Set keyboard layout to US
      template: src=templates/keyboard.j2 dest=/etc/default/keyboard
      notify:
        - reboot
      when: firstrun | match("true")

    - name: TASK | Update Timezone to Etc/UTC
      copy:
        content="Etc/UTC\n"
        dest="/etc/timezone"
        owner=root
        group=root
        mode=0644
        backup=yes

    - name: TASK | Update /etc/services file
      template: src=files/services.j2 dest=/etc/services

    - name: TASK | Create user "{{ username }}"
      user:
        name: "{{ username }}"
        # comment: 'Chris Bergeron'
        shell: /bin/bash
        password: "{{ CBPASSWORDNEW }}"

    - name: TASK | Copy {{ username }} sudoers file
      template: src="templates/020_{{ username }}-nopasswd.j2" dest="/etc/sudoers.d/020_{{ username }}-nopasswd" mode=0440

    - name: TASK | Copy .bash_logout for user cbergeron
      template: src="templates/bash_logout.j2" dest="/home/{{ username }}/.bash_logout"

    - name: TASK | Copy .bashrc for user cbergeron
      template: src="templates/bashrc.j2" dest="/home/{{ username }}/.bashrc" force=yes

    - name: TASK | Copy iTerm2 bash shell integration for user {{ username }}
      template: src="templates/iterm2_bash_shell_integration.j2" dest="/home/cbergeron/.iterm2_shell_integration.bash" force=yes

    - name: TASK | Create ssh config directory for user {{ username }}
      file:
        path: "/home/{{ username }}/.ssh"
        state: directory
        owner: "{{ username }}"
        mode: 0700

    - name: TASK | Copy ssh/config for user {{ username }}
      template: src="templates/ssh_config.j2" dest="/home/{{ username }}/.ssh/config" mode=0400 owner={{ username }}

    - name: TASK | Copy ssh keys for user {{ username }}
      template: src="templates/authorized_keys.j2" dest="/home/{{ username }}/.ssh/authorized_keys" mode=0600 owner={{ username }}

    - name: TASK | Yum update (firstrun)
      command: "sudo yum update"
      when:
        - firstrun | match("true")

    - name: TASK | Yum upgrade (sysupgrade)
      command: "sudo yum upgrade"
      when:
        - sysupgrade | match("true")

    #- name: TASK | Install Toilet
    #  shell: "sudo yum install https://github.com/sliqua-hosting/repo/raw/master/centos/7/x86_64/toilet-0.3-el7.1.x86_64.rpm"

    # set MOTD AFTER toilet has been installed
    #- name: TASK | Set MOTD
    #  shell: "(/usr/bin/toilet -f mono12 -F metal `cat /etc/hostname` > /etc/motd)"

    - name: TASK | Install prowl API key
      template: src="files/prowl_key.txt" dest="/home/cbergeron/prowl_key.txt" mode=0600 owner=cbergeron

    - name: TASK | Install prowl
      template: src="files/prowl.pl" dest="/usr/local/bin/prowl.pl" mode=0755 owner=cbergeron

    - name: TASK | Install prowlnotify
      template: src="files/prowlnotify.sh" dest="/usr/local/bin/prowlnotify" mode=0755 owner=cbergeron

    - name: TASK | Install treesize in /usr/local/bin
      template: src="files/treesize.j2" dest="/usr/local/bin/treesize" mode=0755 owner=pi

    - name: TASK | Install packages 
      yum: pkg={{ item }} state=installed
      with_items: packages_to_install

    - name: TASK | Start updatedb for locate (firstrun)
      shell: "updatedb >/dev/null 2>&1 &"

  handlers:
    - name: reboot
      command: shutdown -r now
      ignore_errors: true
      register: restarted