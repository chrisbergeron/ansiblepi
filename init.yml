#!/usr/bin/env ansible-playbook
---
- hosts: all 
  gather_facts: yes
  vars:
    packages_to_install: [ git, automake, build-essential, 
        ipython, mosh, node, npm, python-pip, ruby-dev, python-dev,
        vim, htop, ranger, iftop, dnsutils, lrzsz, jq, telnet, lsof,
        tcpdump, mlocate
        ]
    npm_packages_to_install: [ mqtt, crypto-js, minimist, websocket-stream ]
    update_cache: no
    username: cbergeron
    firstrun: "false"
  sudo: yes

  tasks:
    - name: TASK | Set /etc/hostname
      template: src=templates/hostname.j2 dest=/etc/hostname
      notify:
        - reboot
      when: firstrun | match("true")

    - name: TASK | Update /etc/hosts
      template: src=templates/hosts.j2 dest=/etc/hosts
      notify:
        - reboot
      when: firstrun | match("true")

    - name: TASK | Update network/interfaces config so wifi starts on boot
      template: src=templates/interfaces.j2 dest=/etc/network/interfaces
    
    - name: TASK | Put wifi config in place
      template: src=templates/wpa_supplicant.conf.j2 dest=/etc/wpa_supplicant/wpa_supplicant.conf
      notify:
        - reboot
      when: firstrun | match("true")

    - name: TASK | Generate locale
      locale_gen: name=en_US.UTF-8 state=present

    - name: TASK | Set keyboard layout to US
      template: src=templates/keyboard.j2 dest=/etc/default/keyboard
      notify:
        - reboot
      when: firstrun | match("true")

    #- name: TASK | Set CAPSLOCK to CTRL
    #  command: setxkbmap -option ctrl:nocaps

    - name: TASK | Update Timezone to Etc/UTC
      copy:
        content="Etc/UTC\n"
        dest="/etc/timezone"
        owner=root
        group=root
        mode=0644
        backup=yes

    - name: TASK | Update /etc/services file
      template: src=files/services.j2 dest=/etc/services

    - name: TASK | Create user "{{ username }}"
      user:
        name: "{{ username }}"
        comment: 'Chris Bergeron'
        shell: /bin/bash
        groups: pi
        password: "{{ CBPASSWORDNEW }}"

    - name: TASK | Copy {{ username }} sudoers file
      template: src="templates/020_cbergeron-nopasswd.j2" dest="/etc/sudoers.d/020_cbergeron-nopasswd" mode=0440

      # Fix rsyslog bug - deletes the lines that reference xconsole
    - name: TASK | Fix rsyslog bug
      shell: "sed -i '/# The named pipe \\/dev\\/xconsole/,$d' /etc/rsyslog.conf"

    - name: TASK | Restart rsyslog
      service:
        name: rsyslog
        state: restarted

    - name: TASK | Copy .bash_logout for user cbergeron
      template: src="templates/bash_logout.j2" dest="/home/cbergeron/.bash_logout"

    - name: TASK | Copy .bashrc for user cbergeron
      template: src="templates/bashrc.j2" dest="/home/cbergeron/.bashrc" force=yes

    - name: TASK | Copy ssh/config for user cbergeron
      template: src="templates/ssh_config.j2" dest="/home/cbergeron/.ssh/config" mode=0400 owner=cbergeron

    - name: TASK | Copy .bash_logout for user pi
      template: src="templates/bashrc.j2" dest="/home/pi/.bashrc"

    - name: TASK | Copy .bashrc for user pi
      template: src="templates/bash_logout.j2" dest="/home/pi/.bash_logout" force=yes

    - name: TASK | Copy ssh/config for user pi
      template: src="templates/ssh_config.j2" dest="/home/pi/.ssh/config" mode=0400 owner=pi

    - name: TASK | Set MOTD
      template: src=templates/motd.j2 dest=/etc/motd
 
    - name: TASK | Create mount directory for Pi files
      file:
        path: /mnt/pi
        state: directory
        mode: 0755

    - name: TASK | Update fstab to mount NAS volume to '/mnt/pi'
      template: src=templates/fstab.j2 dest=/etc/fstab
      notify:
        - reboot
      when: firstrun | match("true")

    - name: TASK | Install python-apt (firstrun)
      command: apt-get install python-apt
      register: aptget
      changed_when: "'python-apt is already the newest version.' not in aptget.stdout_lines"
      when: firstrun | match("true")

    - name: TASK | Add Adafruit repo (firstrun)
      # command: "echo 'deb http://apt.adafruit.com/raspbian/ jessie main' | sudo tee --append /etc/apt/sources.list"
      # command: "wget -O - -q https://apt.adafruit.com/apt.adafruit.com.gpg.key | sudo apt-key add -"
      command: "/bin/bash -c 'curl -sLS https://apt.adafruit.com/add | sudo bash'"
      when: firstrun | match("true") 

    - name: TASK | Apt-get update (firstrun)
      command: "sudo apt-get update"
      when: firstrun | match("true")

    # this seems to hang when doing itself (pi3-2)
    # - name: TASK | Apt-get upgrade (firstrun)
    #    command: "sudo apt-get upgrade"
    #    when: firstrun | match("true")

    #- name: DEBUG | Packages to be installed
    #  debug:
    #    msg: "{{ packages_to_install }}"

    - name: TASK | Install packages (firstrun)
      apt: pkg={{ item }} state=installed update_cache={{ update_cache }}
      with_items: packages_to_install
      when: firstrun | match("true")

    - name: TASK | Install node.js packages with npm (firstrun)
      npm: name={{ item }} global=yes
      with_items: npm_packages_to_install
      when: firstrun | match("true")

    #- name: Display all variables/facts known for a host
    #  debug:
    #    var: hostvars[inventory_hostname]
    #    verbosity: 4

  handlers:
    - name: reboot
      command: shutdown -r now
      async: 0
      poll: 0
      ignore_errors: true
      register: restarted
