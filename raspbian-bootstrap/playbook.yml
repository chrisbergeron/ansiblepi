#!/usr/bin/env ansible-playbook
---
- hosts: 192.168.0.150
  gather_facts: yes
  vars:
    packages_to_install: [ git, automake, build-essential, 
        ipython, mosh, node, npm, python-pip, ruby-dev, python-dev,
        vim, cowsay, htop, ranger, iftop, dnsutils, lrzsz
        ]
    pip_packages_to_install: [ awscli ]
    npm_packages_to_install: [ mqtt, crypto-js, minimist, websocket-stream ]
    users_to_create: [ cbergeron ]
    user: cbergeron
    username: "Chris Bergeron"
    update_cache: no
  sudo: yes
  tasks:
    - name: TASK | Set /etc/hostname
      template: src=templates/hostname.j2 dest=/etc/hostname
      notify: reboot

    - name: TASK | Update /etc/hosts
      template: src=templates/hosts.j2 dest=/etc/hosts
      notify: reboot

    - name: TASK | Update network/interfaces config so wifi starts on boot
      template: src=templates/interfaces.j2 dest=/etc/network/interfaces
    
    - name: TASK | Put wifi config in place
      template: src=templates/wpa_supplicant.conf.j2 dest=/etc/wpa_supplicant/wpa_supplicant.conf
      notify: reboot

    - name: TASK | Change 'pi' default password
      user: name=pi update_password=always password="{{ PIPASSWORDNEW }}"

    - name: TASK | Create user(s)
      # action: user name=cbergeron comment="Chris Bergeron" group=admin
      user:    
        name: "{{ user }}"
        comment: "Chris Bergeron"
        shell: /bin/bash
        groups: pi
        password: "{{ CBPASSWORDNEW }}"
        # with_items: users_to_create
        # when: users_to_create is defined

    - name: TASK | Copy .bashrc and .bash_logout files
      template: src=templates/bashrc.j2 dest=/home/{{ user }}/.bashrc owner="{{ user }}"
      template: src=templates/bash_logout.j2 dest=/home/{{ user }}/.bash_logout
#    - name: TASK | Copy SSH key into authorized_keys
#      authorized_key:
#        user: cbergeron
#        state: present
#        #key: https://raw.githubusercontent.com/chrisbergeron/misc/master/cb_id_rsa.pub
#        key: '{{ item }}'
#      with_items: {{ ssh_keys }}  
#"{{ lookup('file', '/home/{{ newuser }}/.ssh/id_rsa.pub
#        path: /home/{{ users_to_create }}/.ssh/authorized_keys

    #- name: TASK | Add user(s) to sudoers
    #      user: cbergeron
    #      tag: addsudo

    - name: TASK | Set MOTD
      template: src=templates/motd.j2 dest=/etc/motd

    - name: TASK | Create mount directory for Pi files
      file:
        path: /mnt/pi
        state: directory
        mode: 0755

    - name: TASK | Update fstab to mount NAS volume to '/mnt/pi'
      template: src=templates/fstab.j2 dest=/etc/fstab
      notify: reboot

    - name: TASK | Install python-apt
      command: apt-get install python-apt
      register: aptget
      changed_when: "'python-apt is already the newest version.' not in aptget.stdout_lines"

    - name: TASK | Add Adafruit repo
      command: "/bin/bash -c 'curl -sLS https://apt.adafruit.com/add | sudo bash'"

    - name: TASK | Install ubuntu packages
      apt: pkg={{ item }} state=installed update_cache={{ update_cache }}
      with_items: packages_to_install
  
    - name: TASK | Install python modules with pip
      pip: name={{ item }}
      with_items: pip_packages_to_install
   
    - name: TASK | Install node.js packages with npm
      npm: name={{ item }} global=yes
      with_items: npm_packages_to_install

    #- name: install amazon iot device sdk
    #  git: repo=https://github.com/aws/aws-iot-device-sdk-js.git dest=/home/pi/aws-iot-device-sdk-js
      
  handlers:
    - name: reboot
      command: shutdown -r now "Ansible updates triggered"
      async: 0
      poll: 0
      ignore_errors: true
